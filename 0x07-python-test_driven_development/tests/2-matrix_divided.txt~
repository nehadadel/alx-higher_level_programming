>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


>>> noneL = None
>>> empty_list = []
>>> empty_lists = [[], [], []]
>>> not_list = [42, [2, 5], [1, 2, 3]]
>>> not_all_num = [["blue", 1, 2], [3, 4, "f"], ["23b", 5, 6]]
>>> diff_len = [[1,3,3,3], [3,5,1,2,5], [2,5,8]]

>>> matrix_divided(noneL, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(empty_list, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(empty_lists, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix_divided(diff_len, 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided(not_all_num, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(not_list, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[2, 4, 8], [1, 2, 3]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided(matrix, 'a')
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided(matrix, [1, 4])
Traceback (most recent call last):
TypeError: div must be a number
